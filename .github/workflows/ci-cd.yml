name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      # Servicio PostgreSQL para pruebas
      postgres:
        image: postgres:14
        env:
          POSTGRES_DB: tipicos_test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven

      - name: Initialize test database
        run: |
          PGPASSWORD=postgres psql -h localhost -U postgres -d tipicos_test -c "CREATE EXTENSION IF NOT EXISTS dblink;" # Added a placeholder command as '-c' requires a command

      # Compilación del proyecto
      - name: Build with Maven
        run: mvn -B clean compile

      # PRUEBAS UNITARIAS (15%)
      - name: Run Unit Tests Combo
        run: mvn -B test -Dtest="sv.edu.ues.fmocc.tpi135.service.*Test"

      # PRUEBAS DE COBERTURA (15%)
      - name: Generate JaCoCo Coverage Report
        run: mvn -B jacoco:report

      - name: Upload JaCoCo Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-coverage-report
          path: target/site/jacoco/

      # PRUEBAS DE INTEGRACIÓN (15%)
      - name: Run Integration Tests
        run: mvn -B failsafe:integration-test

      - name: Download PostgreSQL JDBC Driver
        run: |
          curl -o postgresql-42.5.1.jar -L https://jdbc.postgresql.org/download/postgresql-42.5.1.jar

      # PRUEBAS DE SISTEMA (15%)
      - name: Build for System Tests
        run: mvn -B package -DskipTests

      - name: Set up test environment with Docker
        run: |
          docker compose -f docker-compose.test.yml up -d
          # Esperar a que el servidor esté listo
          sleep 30

#      - name: Run System Tests
#        run: mvn -B failsafe:verify -Dapi.url=http://localhost:9080/tipicos-api/api

      - name: Shutdown test environment
        run: docker compose -f docker-compose.test.yml down

      # Empaquetado final
      - name: Package application
        run: mvn -B package -DskipTests

      - name: Upload WAR artifact
        uses: actions/upload-artifact@v4
        with:
          name: application-war
          path: target/tipicos-api.war
