<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
         version="3.1">
    
    <display-name>Tipicos API</display-name>
    
         <!-- 1) Definición del Servlet de Jersey -->
    <servlet>
        <servlet-name>JerseyServlet</servlet-name>
        <servlet-class>org.glassfish.jersey.servlet.ServletContainer</servlet-class>
        <!-- Parámetros de inicialización: paquete donde están tus @Path -->
        <init-param>
            <param-name>jersey.config.server.provider.packages</param-name>
            <param-value>sv.edu.ues.fmocc.tpi135</param-value>
        </init-param>
        <!-- Opcional: si usas recursos o proveedores individuales -->
        <!--
        <init-param>
          <param-name>jersey.config.server.provider.classnames</param-name>
          <param-value>
            com.tuempresa.rest.Recurso1,
            com.tuempresa.rest.Recurso2
          </param-value>
        </init-param>
        -->
        <load-on-startup>1</load-on-startup>
    </servlet>

    <!-- 2) Mapeo del Servlet -->
    <servlet-mapping>
        <servlet-name>JerseyServlet</servlet-name>
        <!-- todas las URL que empiecen por /api/ irán a Jersey -->
        <url-pattern>/api/*</url-pattern>
    </servlet-mapping>

    <!-- 3) (Opcional) Configuración de filtros o listeners -->
    <!-- Si necesitas Logging o CORS, por ejemplo: -->
    <!--
    <filter>
      <filter-name>CORSFilter</filter-name>
      <filter-class>com.tuempresa.filters.CORSFilter</filter-class>
    </filter>
    <filter-mapping>
      <filter-name>CORSFilter</filter-name>
      <url-pattern>/*</url-pattern>
    </filter-mapping>
    -->
</web-app>