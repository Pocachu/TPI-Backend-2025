# Dockerfile.test
FROM payara/server-full:5.2022.5-jdk11

# Usar el usuario root temporalmente para los comandos que requieren privilegios
USER root

# Configurar variables de entorno
ENV DB_SERVER=postgres-test \
    DB_PORT=5432 \
    DB_NAME=tipicos_test \
    DB_USER=postgres \
    DB_PASSWORD=postgres \
    SCRIPT_DIR=/opt/payara/scripts \
    DEPLOY_DIR=/opt/payara/deployments

# Actualizar e instalar curl - ahora con permisos adecuados
RUN apt-get update && apt-get install -y curl

# Descargar el driver de PostgreSQL
RUN curl -o ${PAYARA_DIR}/glassfish/domains/domain1/lib/postgresql-42.5.1.jar -L https://jdbc.postgresql.org/download/postgresql-42.5.1.jar

# Copiar el driver de PostgreSQL al directorio de librerías (si ya existe localmente)
COPY postgresql-42.5.1.jar ${PAYARA_DIR}/glassfish/domains/domain1/lib/

# Copiar configuraciones personalizadas
COPY src/main/resources/META-INF/persistence.xml ${PAYARA_DIR}/glassfish/domains/domain1/config/

# Crear directorios necesarios
RUN mkdir -p ${DEPLOY_DIR} ${SCRIPT_DIR}

# Copiar y dar permisos al script de configuración del datasource
COPY setup-datasource.sh ${SCRIPT_DIR}/
RUN chmod +x ${SCRIPT_DIR}/setup-datasource.sh

# Volver al usuario payara para la ejecución normal
USER payara

# Comando de inicio
CMD ${PAYARA_DIR}/bin/startInForeground.sh
